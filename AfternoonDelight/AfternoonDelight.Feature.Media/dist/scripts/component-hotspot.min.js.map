{"version":3,"sources":["component-hotspot.js"],"names":["$","selectors","root","imageContainer","hotspot","hotspotInformation","scPageEditor","scChromeElement","classes","activeHotspot","_sendRequest","x","y","title","apiUrl","config","data","ajax","url","type","dataType","HotspotImageId","hotspotImageId","XLocation","YLocation","Title","DatabaseName","databaseName","success","location","reload","error","Error","_toggleContentForHotspot","$hotspot","$hotspotWidget","closest","hotspotID","attr","$hotspotInformationItems","find","$selectedHotspotContent","filter","hasClass","removeClass","slideUp","_closeHotspotContent","addClass","slideDown","_addAddHotspotEventListeners","on","e","preventDefault","$this","target","alert","offset","pageX","left","pageY","top","imageHeight","height","imageWidth","width","yPos","toFixed","xPos","prompt","_addEventListeners","length","hide","show","off","_displayInitialState","$hotspots","$firstHotspot","first","hotspotId","init","jQuery"],"mappings":"cAAA,SAAAA,GACA,GAAAC,IACAC,KAAA,iBACAC,eAAA,wBACAC,QAAA,0BACAC,mBAAA,gBACAC,aAAA,kBACAC,gBAAA,oBAGAC,GACAC,cAAA,kCAGAC,EAAA,SAAAC,EAAAC,EAAAC,GAEA,GAAAC,GAAA,kEAEAC,EAAAf,EAAAC,EAAAC,MAAAc,MAEA,OAAAhB,GAAAiB,MACAC,IAAAJ,EACAK,KAAA,OACAC,SAAA,OACAJ,MACAK,eAAAN,EAAAO,eACAC,UAAAZ,EACAa,UAAAZ,EACAa,MAAAZ,EACAa,aAAAX,EAAAY,cAEAC,QAAA,SAAAZ,GACAa,SAAAC,UAEAC,MAAA,SAAAf,GACA,KAAAgB,OAAA,2CAYAC,EAAA,SAAAC,GACA,GAAAC,GAAAD,EAAAE,QAAAnC,EAAAC,MACAmC,EAAAH,EAAAI,KAAA,mBACAC,EAAAJ,EAAAK,KAAAvC,EAAAI,oBACAoC,EAAAF,EAAAG,OAAA,qBAAAL,EAAA,KAGAH,GAAAS,SAAAnC,EAAAC,gBACAyB,EAAAU,YAAApC,EAAAC,eACAgC,EACAI,UACAP,KAAA,eAAA,KAEAQ,EAAAX,GACAD,EAAAa,SAAAvC,EAAAC,eACAgC,EACAO,YACAV,KAAA,eAAA,KAIAQ,EAAA,SAAAX,GACA,GAAAI,GAAAJ,EAAAK,KAAAvC,EAAAI,mBACA8B,GAAAK,KAAAvC,EAAAG,SAAAwC,YAAApC,EAAAC,eACA8B,EACAM,UACAP,KAAA,eAAA,IAGAW,EAAA,WACAjD,EAAAC,EAAAE,eAAA,IAAAF,EAAAM,iBAAA2C,GAAA,QAAA,SAAAC,GACAA,EAAAC,gBACA,IAAAC,GAAArD,EAAAmD,EAAAG,OACA,IAAAD,EAAAV,SAAA1C,EAAAG,SACAmD,MAAA,qDACA,CACA,GAAAC,GAAAH,EAAAG,SAEA7C,EAAAwC,EAAAM,MAAAD,EAAAE,KACA9C,EAAAuC,EAAAQ,MAAAH,EAAAI,IAEAC,EAAAR,EAAAS,SACAC,EAAAV,EAAAW,QAEAC,GAAArD,EAAAiD,EAAA,KAAAK,QAAA,GACAC,GAAAxD,EAAAoD,EAAA,KAAAG,QAAA,GAEArD,EAAAuD,OAAA,8BACA1D,GAAAyD,EAAAF,EAAApD,OAKAwD,EAAA,WACArE,EAAA,mBAAAsE,QACAtE,EAAA,+BAAAkD,GAAA,QAAA,SAAAC,GACAA,EAAAC,iBACApD,EAAAmD,EAAAG,QAAAiB,OACAvE,EAAA,iCAAAwE,OACAvB,MAGAjD,EAAA,iCAAAkD,GAAA,QAAA,SAAAC,GACAA,EAAAC,iBACApD,EAAAmD,EAAAG,QAAAiB,OACAvE,EAAA,+BAAAwE,OAGAxE,EAAAC,EAAAE,eAAA,IAAAF,EAAAM,iBAAAkE,IAAA,YAGAzE,EAAAC,EAAAG,SAAA8C,GAAA,QAAA,SAAAC,GACAlB,EAAAjC,EAAAmD,EAAAG,YAKAoB,EAAA,WAIA,GAFA1E,EAAA,iCAAAuE,QAEAvE,EAAA,mBAAAsE,OAAA,CAEA,GAAAK,GAAA3E,EAAAC,EAAAC,MAAAsC,KAAAvC,EAAAG,QACAuE,GAAA/B,YAAApC,EAAAC,cAGA,IAAAmE,GAAAD,EAAAE,OACAD,GAAA7B,SAAAvC,EAAAC,cACA,IAAAqE,GAAAF,EAAAtC,KAAA,kBACAtC,GAAAC,EAAAI,oBAAAkE,OACAvE,EAAAC,EAAAI,oBAAAqC,OAAA,qBAAAoC,EAAA,MAAAjC,YAIAkC,EAAA,WACA/E,EAAAC,EAAAC,MAAAoE,SACAD,IACAK,KAIAK,MAEAC","file":"component-hotspot.min.js","sourcesContent":["(($) => {\r\n    let selectors = {\r\n        root: '.hotspot-image',\r\n        imageContainer: '.hotspot-image__image',\r\n        hotspot: '.hotspot-image__hotspot',\r\n        hotspotInformation: '.hotspot-item',\r\n        scPageEditor: '.on-page-editor',\r\n        scChromeElement: '.scEnabledChrome'\r\n    };\r\n\r\n    let classes = {\r\n        activeHotspot: 'hotspot-image__hotspot--active',\r\n    };\r\n\r\n    let _sendRequest = (x, y, title) => {\r\n\r\n        let apiUrl = '//afternoondelight/customapi/HotspotImage/SaveHotspotCoordintes';\r\n\r\n        let config = $(selectors.root).data();\r\n\r\n        return $.ajax({\r\n            url: apiUrl,\r\n            type: 'POST',\r\n            dataType: 'json',\r\n            data: {\r\n                'HotspotImageId': config.hotspotImageId,\r\n                'XLocation': x,\r\n                'YLocation': y,\r\n                'Title': title,\r\n                'DatabaseName': config.databaseName\r\n            },\r\n            success: function (data) {                \r\n                location.reload();\r\n            },\r\n            error: function (data) {\r\n                throw Error('Unable to POST event to the service');\r\n            }\r\n        });\r\n    };\r\n\r\n    let _addHotspot = (x, y) => {        \r\n        // this will be done after confirmation from sitecore that item is created\r\n        $('.js-hotspots').append('<span class=\"'+ selectors.hotspot +'\" style=\"top: ' + y + '%; left: ' + x + '%; \"></span>');\r\n    };\r\n\r\n\r\n    // show hide content item\r\n    let _toggleContentForHotspot = function ($hotspot) {\r\n        let $hotspotWidget = $hotspot.closest(selectors.root);\r\n        let hotspotID = $hotspot.attr('data-hotspot-id');\r\n        let $hotspotInformationItems = $hotspotWidget.find(selectors.hotspotInformation);\r\n        let $selectedHotspotContent = $hotspotInformationItems.filter(`[data-hotspot-id=\"${hotspotID}\"]`);\r\n\r\n        // if already active\r\n        if ($hotspot.hasClass(classes.activeHotspot)) {\r\n            $hotspot.removeClass(classes.activeHotspot);\r\n            $selectedHotspotContent\r\n                .slideUp()\r\n                .attr('aria-hidden', true);\r\n        } else {\r\n            _closeHotspotContent($hotspotWidget);\r\n            $hotspot.addClass(classes.activeHotspot);\r\n            $selectedHotspotContent\r\n                .slideDown()\r\n                .attr('aria-hidden', false);\r\n        }\r\n    };\r\n\r\n    let _closeHotspotContent = function ($hotspotWidget) {\r\n        let $hotspotInformationItems = $hotspotWidget.find(selectors.hotspotInformation);\r\n        $hotspotWidget.find(selectors.hotspot).removeClass(classes.activeHotspot);\r\n        $hotspotInformationItems\r\n            .slideUp()\r\n            .attr('aria-hidden', true);\r\n    };\r\n\r\n    let _addAddHotspotEventListeners = () => {\r\n        $(`${selectors.imageContainer} ${selectors.scChromeElement}`).on('click', (e) => {\r\n            e.preventDefault();\r\n            let $this = $(e.target);\r\n            if ($this.hasClass(selectors.hotspot)) {\r\n                alert('You cannot add a hotspot to the same location');\r\n            } else {\r\n                let offset = $this.offset();\r\n\r\n                let x = e.pageX - offset.left;\r\n                let y = e.pageY - offset.top;\r\n\r\n                let imageHeight = $this.height();\r\n                let imageWidth = $this.width();\r\n\r\n                let yPos = (y / imageHeight * 100).toFixed(2);\r\n                let xPos = (x / imageWidth * 100).toFixed(2);\r\n\r\n                let title = prompt('Title of your hotspot item:');\r\n                _sendRequest(xPos, yPos, title);\r\n            }\r\n        });\r\n    };\r\n\r\n    let _addEventListeners = () => {\r\n        if ($('.on-page-editor').length) {       \r\n            $('.hotspot-controls__activate').on('click', (e) => {\r\n                e.preventDefault();\r\n                $(e.target).hide();\r\n                $('.hotspot-controls__deactivate').show();\r\n                _addAddHotspotEventListeners();\r\n            });\r\n\r\n            $('.hotspot-controls__deactivate').on('click', (e) => {\r\n                e.preventDefault();\r\n                $(e.target).hide();\r\n                $('.hotspot-controls__activate').show();\r\n                //$(selectors.imageContainer).off('click');\r\n                // remove event listeners\r\n                $(`${selectors.imageContainer} ${selectors.scChromeElement}`).off('click');\r\n            });\r\n        } else {\r\n            $(selectors.hotspot).on('click', function (e) {\r\n                _toggleContentForHotspot($(e.target));\r\n            });\r\n        }\r\n    };\r\n\r\n    let _displayInitialState = () => {\r\n        // hide the deactivate button by default\r\n        $('.hotspot-controls__deactivate').hide();\r\n\r\n        if (!$('.on-page-editor').length) {\r\n            // remove all dot active states\r\n            let $hotspots = $(selectors.root).find(selectors.hotspot);\r\n            $hotspots.removeClass(classes.activeHotspot);\r\n\r\n            // show first dot\r\n            let $firstHotspot = $hotspots.first();\r\n            $firstHotspot.addClass(classes.activeHotspot);\r\n            let hotspotId = $firstHotspot.attr('data-hotspot-id');\r\n            $(selectors.hotspotInformation).hide();\r\n            $(selectors.hotspotInformation).filter(`[data-hotspot-id=\"${hotspotId}\"]`).slideUp();\r\n        };\r\n    };\r\n\r\n    let init = () => {\r\n        if ($(selectors.root).length) {\r\n            _addEventListeners();\r\n            _displayInitialState();\r\n        }\r\n    };\r\n\r\n    init();\r\n\r\n})(jQuery);\r\n"]}