{"version":3,"sources":["component-hotspot.js"],"names":["$","selectors","root","imageContainer","hotspot","hotspotInformation","scPageEditor","scChromeElement","_eventListeners","on","e","preventDefault","$this","target","hasClass","alert","offset","x","pageX","left","y","pageY","top","imageHeight","height","imageWidth","width","yPos","toFixed","xPos","_sendRequest","apiUrl","config","data","ajax","url","type","dataType","HotspotImageId","hotspotImageId","XLocation","YLocation","DatabaseName","databaseName","success","_addHotspot","error","Error","append","_activateHotspots","hide","show","_deactivateHostpots","off","init","length","jQuery"],"mappings":"cAAA,SAAAA,GACA,GAAAC,IACAC,KAAA,iBACAC,eAAA,wBACAC,QAAA,yBACAC,mBAAA,OACAC,aAAA,kBACAC,gBAAA,oBAGAC,EAAA,WACAR,EAAAC,EAAAE,eAAA,IAAAI,iBAAAE,GAAA,QAAA,SAAAC,GAEAA,EAAAC,gBACA,IAAAC,GAAAZ,EAAAU,EAAAG,OACA,IAAAD,EAAAE,SAAAb,EAAAG,SACAW,MAAA,qDACA,CACA,GAAAC,GAAAJ,EAAAI,SAEAC,EAAAP,EAAAQ,MAAAF,EAAAG,KACAC,EAAAV,EAAAW,MAAAL,EAAAM,IAEAC,EAAAX,EAAAY,SACAC,EAAAb,EAAAc,QAEAC,GAAAP,EAAAG,EAAA,KAAAK,QAAA,GACAC,GAAAZ,EAAAQ,EAAA,KAAAG,QAAA,EAQAE,GAAAD,EAAAF,OAKAG,EAAA,SAAAb,EAAAG,GAEA,GAAAW,GAAA,kEAEAC,EAAAhC,EAAAC,EAAAC,MAAA+B,MAEA,OAAAjC,GAAAkC,MACAC,IAAAJ,EACAK,KAAA,OACAC,SAAA,OACAJ,MACAK,eAAAN,EAAAO,eACAC,UAAAvB,EACAwB,UAAArB,EACAsB,aAAAV,EAAAW,cAEAC,QAAA,SAAAX,GACAY,EAAA5B,EAAAG,IAEA0B,MAAA,SAAAb,GACA,KAAAc,OAAA,2CAKAF,EAAA,SAAA5B,EAAAG,GAEApB,EAAA,gBAAAgD,OAAA,gBAAA/C,EAAAG,QAAA,iBAAAgB,EAAA,YAAAH,EAAA,iBAGAgC,EAAA,WACAjD,EAAA,gCAAAS,GAAA,QAAA,SAAAC,GACAA,EAAAC,iBACAX,EAAAU,EAAAG,QAAAqC,OACAlD,EAAA,kCAAAmD,OACA3C,OAIA4C,EAAA,WACApD,EAAA,kCAAAS,GAAA,QAAA,SAAAC,GACAA,EAAAC,iBACAX,EAAAU,EAAAG,QAAAqC,OACAlD,EAAA,gCAAAmD,OACAnD,EAAAC,EAAAE,gBAAAkD,IAAA,YAiCAC,EAAA,WACAtD,EAAAC,EAAAC,MAAAqD,QAAAvD,EAAAC,EAAAK,cAAAiD,SACAN,IACAG,KAIAE,MAEAE","file":"component-hotspot.min.js","sourcesContent":["(($) => {\r\n    let selectors = {\r\n        root: '.hotspot-image',\r\n        imageContainer: '.hotspot-image__image',\r\n        hotspot: 'hotspot-image__hotspot',\r\n        hotspotInformation: 'TODO',\r\n        scPageEditor: '.on-page-editor',\r\n        scChromeElement: '.scEnabledChrome'\r\n    };\r\n\r\n    let _eventListeners = () => {        \r\n        $(`${selectors.imageContainer} ${scChromeElement}`).on('click', (e) => {\r\n            debugger;\r\n            e.preventDefault();\r\n            let $this = $(e.target);\r\n            if ($this.hasClass(selectors.hotspot)) {\r\n                alert('You cannot add a hotspot to the same location');\r\n            } else {\r\n                let offset = $this.offset();\r\n\r\n                let x = e.pageX - offset.left;\r\n                let y = e.pageY - offset.top;\r\n                \r\n                let imageHeight = $this.height();\r\n                let imageWidth = $this.width();\r\n\r\n                let yPos = (y / imageHeight * 100).toFixed(2);\r\n                let xPos = (x / imageWidth * 100).toFixed(2);\r\n\r\n                // send api call providing x and y positions\r\n\r\n                // prompt to confirm if user would like to place hotspot\r\n\r\n                // get data back from sitecore with item guid\r\n\r\n                _sendRequest(xPos, yPos);\r\n            }\r\n        });\r\n    };\r\n\r\n    let _sendRequest = (x, y) => {\r\n\r\n        var apiUrl = '//afternoondelight/customapi/HotspotImage/SaveHotspotCoordintes';\r\n\r\n        var config = $(selectors.root).data();\r\n\r\n        return $.ajax({\r\n            url: apiUrl,\r\n            type: 'POST',\r\n            dataType: 'json',\r\n            data: {\r\n                'HotspotImageId': config.hotspotImageId,\r\n                'XLocation': x,\r\n                'YLocation': y,\r\n                'DatabaseName': config.databaseName\r\n            },\r\n            success: function (data) {                \r\n                _addHotspot(x, y);\r\n            },\r\n            error: function (data) {\r\n                throw Error('Unable to POST event to the service');\r\n            }\r\n        });\r\n    };\r\n\r\n    let _addHotspot = (x, y) => {        \r\n        // this will be done after confirmation from sitecore that item is created\r\n        $('.js-hotspots').append('<span class=\"'+ selectors.hotspot +'\" style=\"top: ' + y + '%; left: ' + x + '%; \"></span>');\r\n    };\r\n\r\n    let _activateHotspots = () => {\r\n        $('.hotspots-controls__activate').on('click', (e) => {\r\n            e.preventDefault();\r\n            $(e.target).hide();\r\n            $('.hotspots-controls__deactivate').show();\r\n            _eventListeners();\r\n        });\r\n    };\r\n\r\n    let _deactivateHostpots = () => {\r\n        $('.hotspots-controls__deactivate').on('click', (e) => {\r\n            e.preventDefault();\r\n            $(e.target).hide();\r\n            $('.hotspots-controls__activate').show();\r\n            $(selectors.imageContainer).off('click');\r\n        });\r\n    };\r\n\r\n    // show hide content item\r\n    let toggleContentForHotspot = function ($hotspotWidget, $hotspot) {\r\n        let hotspotID = $hotspot.attr('data-hotspot-id');\r\n        let $hotspotInformationItems = $hotspotWidget.find(selectors.hotspotInformation);\r\n        let $selectedHotspotContent = $hotspotInformationItems.filter('[data-hotspot-id=' + hotspotID + ']');\r\n\r\n        // if already active\r\n        if ($hotspot.hasClass(classes.activeHotspot)) {\r\n            $hotspot.removeClass(classes.activeHotspot);\r\n            $selectedHotspotContent\r\n                .slideUp()\r\n                .attr('aria-hidden', true);\r\n        } else {\r\n            closeHotspotContent($hotspotWidget);\r\n            $hotspot.addClass(classes.activeHotspot);\r\n            $selectedHotspotContent\r\n                .slideDown()\r\n                .attr('aria-hidden', false);\r\n        }\r\n    };\r\n\r\n    var closeHotspotContent = function ($hotspotWidget) {\r\n        let $hotspotInformationItems = $hotspotWidget.find(selectors.hotspotInformation);\r\n        $hotspotWidget.find(selectors.hotspot).removeClass(classes.activeHotspot);\r\n        $hotspotInformationItems\r\n            .slideUp()\r\n            .attr('aria-hidden', true);\r\n    };\r\n\r\n    let init = () => {\r\n        if ($(selectors.root).length && $(selectors.scPageEditor).length) {\r\n            _activateHotspots();\r\n            _deactivateHostpots();\r\n        }\r\n    };\r\n\r\n    init();\r\n\r\n})(jQuery);\r\n"]}