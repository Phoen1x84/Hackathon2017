{"version":3,"sources":["component-hotspot.js"],"names":["$","selectors","root","imageContainer","hotspot","hotspotInformation","scPageEditor","scChromeElement","classes","activeHotspot","_sendRequest","x","y","title","apiUrl","config","data","ajax","url","type","dataType","HotspotImageId","hotspotImageId","XLocation","YLocation","Title","DatabaseName","databaseName","success","location","reload","error","Error","_toggleContentForHotspot","$hotspot","$hotspotWidget","closest","hotspotID","attr","$hotspotInformationItems","find","$selectedHotspotContent","filter","hasClass","removeClass","slideUp","_closeHotspotContent","addClass","slideDown","_addAddHotspotEventListeners","on","e","preventDefault","$this","target","alert","offset","pageX","left","pageY","top","imageHeight","height","imageWidth","width","yPos","toFixed","xPos","prompt","_addEventListeners","length","hide","show","off","_displayInitialState","$hotspots","$firstHotspot","first","hotspotId","init","jQuery"],"mappings":"cAAA,SAAAA,GACA,GAAAC,IACAC,KAAA,iBACAC,eAAA,wBACAC,QAAA,0BACAC,mBAAA,gBACAC,aAAA,kBACAC,gBAAA,oBAGAC,GACAC,cAAA,kCAGAC,EAAA,SAAAC,EAAAC,EAAAC,GAEA,GAAAC,GAAA,kEAEAC,EAAAf,EAAAC,EAAAC,MAAAc,MAEA,OAAAhB,GAAAiB,MACAC,IAAAJ,EACAK,KAAA,OACAC,SAAA,OACAJ,MACAK,eAAAN,EAAAO,eACAC,UAAAZ,EACAa,UAAAZ,EACAa,MAAAZ,EACAa,aAAAX,EAAAY,cAEAC,QAAA,SAAAZ,GACAa,SAAAC,UAEAC,MAAA,SAAAf,GACA,KAAAgB,OAAA,2CAYAC,EAAA,SAAAC,GACA,GAAAC,GAAAD,EAAAE,QAAAnC,EAAAC,MACAmC,EAAAH,EAAAI,KAAA,mBACAC,EAAAJ,EAAAK,KAAAvC,EAAAI,oBACAoC,EAAAF,EAAAG,OAAA,qBAAAL,EAAA,KAGAH,GAAAS,SAAAnC,EAAAC,gBACAyB,EAAAU,YAAApC,EAAAC,eACAgC,EACAI,UACAP,KAAA,eAAA,KAEAQ,EAAAX,GACAD,EAAAa,SAAAvC,EAAAC,eACAgC,EACAO,YACAV,KAAA,eAAA,KAIAQ,EAAA,SAAAX,GACA,GAAAI,GAAAJ,EAAAK,KAAAvC,EAAAI,mBACA8B,GAAAK,KAAAvC,EAAAG,SAAAwC,YAAApC,EAAAC,eACA8B,EACAM,UACAP,KAAA,eAAA,IAGAW,EAAA,WACAjD,EAAAC,EAAAE,eAAA,IAAAF,EAAAM,iBAAA2C,GAAA,QAAA,SAAAC,GACAA,EAAAC,gBACA,IAAAC,GAAArD,EAAAmD,EAAAG,OACA,IAAAD,EAAAV,SAAA1C,EAAAG,SACAmD,MAAA,qDACA,CACA,GAAAC,GAAAH,EAAAG,SAEA7C,EAAAwC,EAAAM,MAAAD,EAAAE,KACA9C,EAAAuC,EAAAQ,MAAAH,EAAAI,IAEAC,EAAAR,EAAAS,SACAC,EAAAV,EAAAW,QAEAC,GAAArD,EAAAiD,EAAA,KAAAK,QAAA,GACAC,GAAAxD,EAAAoD,EAAA,KAAAG,QAAA,GAEArD,EAAAuD,OAAA,8BACA1D,GAAAyD,EAAAF,EAAApD,OAKAwD,EAAA,WACArE,EAAA,mBAAAsE,QACAtE,EAAA,+BAAAkD,GAAA,QAAA,SAAAC,GACAA,EAAAC,iBACApD,EAAAmD,EAAAG,QAAAiB,OACAvE,EAAA,iCAAAwE,OACAvB,MAGAjD,EAAA,iCAAAkD,GAAA,QAAA,SAAAC,GACAA,EAAAC,iBACApD,EAAAmD,EAAAG,QAAAiB,OACAvE,EAAA,+BAAAwE,OAGAxE,EAAAC,EAAAE,eAAA,IAAAF,EAAAM,iBAAAkE,IAAA,YAGAzE,EAAAC,EAAAG,SAAA8C,GAAA,QAAA,SAAAC,GACAlB,EAAAjC,EAAAmD,EAAAG,YAKAoB,EAAA,WAIA,GAFA1E,EAAA,iCAAAuE,QAEAvE,EAAA,mBAAAsE,OAAA,CAEA,GAAAK,GAAA3E,EAAAC,EAAAC,MAAAsC,KAAAvC,EAAAG,QACAuE,GAAA/B,YAAApC,EAAAC,cAGA,IAAAmE,GAAAD,EAAAE,OACAD,GAAA7B,SAAAvC,EAAAC,cACA,IAAAqE,GAAAF,EAAAtC,KAAA,kBACAtC,GAAAC,EAAAI,oBAAAkE,OACAvE,EAAAC,EAAAI,oBAAAqC,OAAA,qBAAAoC,EAAA,MAAAjC,YAIAkC,EAAA,WACA/E,EAAAC,EAAAC,MAAAoE,SACAD,IACAK,KAIAK,MAEAC","file":"component-hotspot.min.js","sourcesContent":["(($) => {\n    let selectors = {\n        root: '.hotspot-image',\n        imageContainer: '.hotspot-image__image',\n        hotspot: '.hotspot-image__hotspot',\n        hotspotInformation: '.hotspot-item',\n        scPageEditor: '.on-page-editor',\n        scChromeElement: '.scEnabledChrome'\n    };\n\n    let classes = {\n        activeHotspot: 'hotspot-image__hotspot--active',\n    };\n\n    let _sendRequest = (x, y, title) => {\n\n        let apiUrl = '//afternoondelight/customapi/HotspotImage/SaveHotspotCoordintes';\n\n        let config = $(selectors.root).data();\n\n        return $.ajax({\n            url: apiUrl,\n            type: 'POST',\n            dataType: 'json',\n            data: {\n                'HotspotImageId': config.hotspotImageId,\n                'XLocation': x,\n                'YLocation': y,\n                'Title': title,\n                'DatabaseName': config.databaseName\n            },\n            success: function (data) {                \n                location.reload();\n            },\n            error: function (data) {\n                throw Error('Unable to POST event to the service');\n            }\n        });\n    };\n\n    let _addHotspot = (x, y) => {        \n        // this will be done after confirmation from sitecore that item is created\n        $('.js-hotspots').append('<span class=\"'+ selectors.hotspot +'\" style=\"top: ' + y + '%; left: ' + x + '%; \"></span>');\n    };\n\n\n    // show hide content item\n    let _toggleContentForHotspot = function ($hotspot) {\n        let $hotspotWidget = $hotspot.closest(selectors.root);\n        let hotspotID = $hotspot.attr('data-hotspot-id');\n        let $hotspotInformationItems = $hotspotWidget.find(selectors.hotspotInformation);\n        let $selectedHotspotContent = $hotspotInformationItems.filter(`[data-hotspot-id=\"${hotspotID}\"]`);\n\n        // if already active\n        if ($hotspot.hasClass(classes.activeHotspot)) {\n            $hotspot.removeClass(classes.activeHotspot);\n            $selectedHotspotContent\n                .slideUp()\n                .attr('aria-hidden', true);\n        } else {\n            _closeHotspotContent($hotspotWidget);\n            $hotspot.addClass(classes.activeHotspot);\n            $selectedHotspotContent\n                .slideDown()\n                .attr('aria-hidden', false);\n        }\n    };\n\n    let _closeHotspotContent = function ($hotspotWidget) {\n        let $hotspotInformationItems = $hotspotWidget.find(selectors.hotspotInformation);\n        $hotspotWidget.find(selectors.hotspot).removeClass(classes.activeHotspot);\n        $hotspotInformationItems\n            .slideUp()\n            .attr('aria-hidden', true);\n    };\n\n    let _addAddHotspotEventListeners = () => {\n        $(`${selectors.imageContainer} ${selectors.scChromeElement}`).on('click', (e) => {\n            e.preventDefault();\n            let $this = $(e.target);\n            if ($this.hasClass(selectors.hotspot)) {\n                alert('You cannot add a hotspot to the same location');\n            } else {\n                let offset = $this.offset();\n\n                let x = e.pageX - offset.left;\n                let y = e.pageY - offset.top;\n\n                let imageHeight = $this.height();\n                let imageWidth = $this.width();\n\n                let yPos = (y / imageHeight * 100).toFixed(2);\n                let xPos = (x / imageWidth * 100).toFixed(2);\n\n                let title = prompt('Title of your hotspot item:');\n                _sendRequest(xPos, yPos, title);\n            }\n        });\n    };\n\n    let _addEventListeners = () => {\n        if ($('.on-page-editor').length) {       \n            $('.hotspot-controls__activate').on('click', (e) => {\n                e.preventDefault();\n                $(e.target).hide();\n                $('.hotspot-controls__deactivate').show();\n                _addAddHotspotEventListeners();\n            });\n\n            $('.hotspot-controls__deactivate').on('click', (e) => {\n                e.preventDefault();\n                $(e.target).hide();\n                $('.hotspot-controls__activate').show();\n                //$(selectors.imageContainer).off('click');\n                // remove event listeners\n                $(`${selectors.imageContainer} ${selectors.scChromeElement}`).off('click');\n            });\n        } else {\n            $(selectors.hotspot).on('click', function (e) {\n                _toggleContentForHotspot($(e.target));\n            });\n        }\n    };\n\n    let _displayInitialState = () => {\n        // hide the deactivate button by default\n        $('.hotspot-controls__deactivate').hide();\n\n        if (!$('.on-page-editor').length) {\n            // remove all dot active states\n            let $hotspots = $(selectors.root).find(selectors.hotspot);\n            $hotspots.removeClass(classes.activeHotspot);\n\n            // show first dot\n            let $firstHotspot = $hotspots.first();\n            $firstHotspot.addClass(classes.activeHotspot);\n            let hotspotId = $firstHotspot.attr('data-hotspot-id');\n            $(selectors.hotspotInformation).hide();\n            $(selectors.hotspotInformation).filter(`[data-hotspot-id=\"${hotspotId}\"]`).slideUp();\n        };\n    };\n\n    let init = () => {\n        if ($(selectors.root).length) {\n            _addEventListeners();\n            _displayInitialState();\n        }\n    };\n\n    init();\n\n})(jQuery);\n"]}