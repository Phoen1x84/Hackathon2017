{"version":3,"sources":["component-hotspot.js"],"names":["$","selectors","root","imageContainer","hotspot","hotspotInformation","scPageEditor","scChromeElement","_sendRequest","x","y","title","apiUrl","config","data","ajax","url","type","dataType","HotspotImageId","hotspotImageId","XLocation","YLocation","Title","DatabaseName","databaseName","success","_addHotspot","error","Error","append","_toggleContentForHotspot","$hotspotWidget","$hotspot","hotspotID","attr","$hotspotInformationItems","find","$selectedHotspotContent","filter","hasClass","classes","activeHotspot","removeClass","slideUp","_closeHotspotContent","addClass","slideDown","_addAddHotspotEventListeners","on","e","preventDefault","$this","target","alert","offset","pageX","left","pageY","top","imageHeight","height","imageWidth","width","yPos","toFixed","xPos","prompt","_addEventListeners","length","hide","show","off","_displayInitialState","init","jQuery"],"mappings":"cAAA,SAAAA,GACA,GAAAC,IACAC,KAAA,iBACAC,eAAA,wBACAC,QAAA,0BACAC,mBAAA,OACAC,aAAA,kBACAC,gBAAA,oBAGAC,EAAA,SAAAC,EAAAC,EAAAC,GAEA,GAAAC,GAAA,kEAEAC,EAAAb,EAAAC,EAAAC,MAAAY,MAEA,OAAAd,GAAAe,MACAC,IAAAJ,EACAK,KAAA,OACAC,SAAA,OACAJ,MACAK,eAAAN,EAAAO,eACAC,UAAAZ,EACAa,UAAAZ,EACAa,MAAAZ,EACAa,aAAAX,EAAAY,cAEAC,QAAA,SAAAZ,GACAa,EAAAlB,EAAAC,IAEAkB,MAAA,SAAAd,GACA,KAAAe,OAAA,2CAKAF,EAAA,SAAAlB,EAAAC,GAEAV,EAAA,gBAAA8B,OAAA,gBAAA7B,EAAAG,QAAA,iBAAAM,EAAA,YAAAD,EAAA,iBAKAsB,EAAA,SAAAC,EAAAC,GACA,GAAAC,GAAAD,EAAAE,KAAA,mBACAC,EAAAJ,EAAAK,KAAApC,EAAAI,oBACAiC,EAAAF,EAAAG,OAAA,oBAAAL,EAAA,IAGAD,GAAAO,SAAAC,QAAAC,gBACAT,EAAAU,YAAAF,QAAAC,eACAJ,EACAM,UACAT,KAAA,eAAA,KAEAU,EAAAb,GACAC,EAAAa,SAAAL,QAAAC,eACAJ,EACAS,YACAZ,KAAA,eAAA,KAIAU,EAAA,SAAAb,GACA,GAAAI,GAAAJ,EAAAK,KAAApC,EAAAI,mBACA2B,GAAAK,KAAApC,EAAAG,SAAAuC,YAAAF,QAAAC,eACAN,EACAQ,UACAT,KAAA,eAAA,IAGAa,EAAA,WACAhD,EAAAC,EAAAE,eAAA,IAAAI,iBAAA0C,GAAA,QAAA,SAAAC,GAEAA,EAAAC,gBACA,IAAAC,GAAApD,EAAAkD,EAAAG,OACA,IAAAD,EAAAZ,SAAAvC,EAAAG,SACAkD,MAAA,qDACA,CACA,GAAAC,GAAAH,EAAAG,SAEA9C,EAAAyC,EAAAM,MAAAD,EAAAE,KACA/C,EAAAwC,EAAAQ,MAAAH,EAAAI,IAEAC,EAAAR,EAAAS,SACAC,EAAAV,EAAAW,QAEAC,GAAAtD,EAAAkD,EAAA,KAAAK,QAAA,GACAC,GAAAzD,EAAAqD,EAAA,KAAAG,QAAA,GAEAtD,EAAAwD,OAAA,8BACA3D,GAAA0D,EAAAF,EAAArD,OAKAyD,EAAA,WACApE,EAAA,mBAAAqE,QACArE,EAAAC,EAAAG,SAAA6C,GAAA,QAAA,WACAlB,EAAA/B,EAAAkD,EAAAG,WAIArD,EAAA,+BAAAiD,GAAA,QAAA,SAAAC,GACAA,EAAAC,iBACAnD,EAAAkD,EAAAG,QAAAiB,OACAtE,EAAA,iCAAAuE,OACAvB,MAGAhD,EAAA,iCAAAiD,GAAA,QAAA,SAAAC,GACAA,EAAAC,iBACAnD,EAAAkD,EAAAG,QAAAiB,OACAtE,EAAA,+BAAAuE,OAGAvE,EAAAC,EAAAE,eAAA,IAAAI,iBAAAiE,IAAA,YAIAC,EAAA,YACAzE,EAAA,mBAAAqE,QAOAK,EAAA,WACA1E,EAAAC,EAAAC,MAAAmE,QAAArE,EAAAC,EAAAK,cAAA+D,SACAD,IACAK,KAIAC,MAEAC","file":"component-hotspot.min.js","sourcesContent":["(($) => {\n    let selectors = {\n        root: '.hotspot-image',\n        imageContainer: '.hotspot-image__image',\n        hotspot: '.hotspot-image__hotspot',\n        hotspotInformation: 'TODO',\n        scPageEditor: '.on-page-editor',\n        scChromeElement: '.scEnabledChrome'\n    };\n\n    let _sendRequest = (x, y, title) => {\n\n        let apiUrl = '//afternoondelight/customapi/HotspotImage/SaveHotspotCoordintes';\n\n        let config = $(selectors.root).data();\n\n        return $.ajax({\n            url: apiUrl,\n            type: 'POST',\n            dataType: 'json',\n            data: {\n                'HotspotImageId': config.hotspotImageId,\n                'XLocation': x,\n                'YLocation': y,\n                'Title': title,\n                'DatabaseName': config.databaseName\n            },\n            success: function (data) {                \n                _addHotspot(x, y);\n            },\n            error: function (data) {\n                throw Error('Unable to POST event to the service');\n            }\n        });\n    };\n\n    let _addHotspot = (x, y) => {        \n        // this will be done after confirmation from sitecore that item is created\n        $('.js-hotspots').append('<span class=\"'+ selectors.hotspot +'\" style=\"top: ' + y + '%; left: ' + x + '%; \"></span>');\n    };\n\n\n    // show hide content item\n    let _toggleContentForHotspot = function ($hotspotWidget, $hotspot) {\n        let hotspotID = $hotspot.attr('data-hotspot-id');\n        let $hotspotInformationItems = $hotspotWidget.find(selectors.hotspotInformation);\n        let $selectedHotspotContent = $hotspotInformationItems.filter('[data-hotspot-id=' + hotspotID + ']');\n\n        // if already active\n        if ($hotspot.hasClass(classes.activeHotspot)) {\n            $hotspot.removeClass(classes.activeHotspot);\n            $selectedHotspotContent\n                .slideUp()\n                .attr('aria-hidden', true);\n        } else {\n            _closeHotspotContent($hotspotWidget);\n            $hotspot.addClass(classes.activeHotspot);\n            $selectedHotspotContent\n                .slideDown()\n                .attr('aria-hidden', false);\n        }\n    };\n\n    let _closeHotspotContent = function ($hotspotWidget) {\n        let $hotspotInformationItems = $hotspotWidget.find(selectors.hotspotInformation);\n        $hotspotWidget.find(selectors.hotspot).removeClass(classes.activeHotspot);\n        $hotspotInformationItems\n            .slideUp()\n            .attr('aria-hidden', true);\n    };\n\n    let _addAddHotspotEventListeners = () => {\n        $(`${selectors.imageContainer} ${scChromeElement}`).on('click', (e) => {\n            debugger;\n            e.preventDefault();\n            let $this = $(e.target);\n            if ($this.hasClass(selectors.hotspot)) {\n                alert('You cannot add a hotspot to the same location');\n            } else {\n                let offset = $this.offset();\n\n                let x = e.pageX - offset.left;\n                let y = e.pageY - offset.top;\n\n                let imageHeight = $this.height();\n                let imageWidth = $this.width();\n\n                let yPos = (y / imageHeight * 100).toFixed(2);\n                let xPos = (x / imageWidth * 100).toFixed(2);\n\n                let title = prompt('Title of your hotspot item:');\n                _sendRequest(xPos, yPos, title);\n            }\n        });\n    };\n\n    let _addEventListeners = () => {\n        if ($('.on-page-editor').length) {\n            $(selectors.hotspot).on('click', function () {\n                _toggleContentForHotspot($(e.target));\n            });\n        };\n\n        $('.hotspot-controls__activate').on('click', (e) => {\n            e.preventDefault();\n            $(e.target).hide();\n            $('.hotspot-controls__deactivate').show();\n            _addAddHotspotEventListeners();\n        });\n\n        $('.hotspot-controls__deactivate').on('click', (e) => {\n            e.preventDefault();\n            $(e.target).hide();\n            $('.hotspot-controls__activate').show();\n            //$(selectors.imageContainer).off('click');\n            // remove event listeners\n            $(`${selectors.imageContainer} ${scChromeElement}`).off('click');\n        });\n    };\n\n    let _displayInitialState = () => {\n        if (!$('.on-page-editor').length) {\n            // hide all dots\n            // show first dot\n            // add active class to first dot\n        };\n    };\n\n    let init = () => {\n        if ($(selectors.root).length && $(selectors.scPageEditor).length) {\n            _addEventListeners();\n            _displayInitialState();\n        }\n    };\n\n    init();\n\n})(jQuery);\n"]}